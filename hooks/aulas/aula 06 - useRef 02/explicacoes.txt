Nessa aula vamos ver algumas outras utilizações do UseRef, podemos 
referenciar um elemento html específico utilizando o useRef dentro da tag, dessa
forma por exemplo:


<input type="text" className="input" 
                ref={myInput1} // dessa forma 
                value={value1} onChange={e => setValuer(e.target.value)} />



const myInput1 = useRef(null)
    const myInput2 = useRef(null)

    console.log(myInput1.current)

quando dá o console.log vai e é digitado algo no input ele vai mostrar a referência do
input que está com a tag ref={myInput1}

com esse hook, conseguimos por exemplo fazer um desafio que é quando é digitado um valor 
em um input, automaticamente vai para o outro input e depois que digita no segundo input
volta para o primeiro e assim por diante.

o código ficou dessa forma:

import React, { useEffect, useRef , useState } from 'react'
import PageTitle from '../../components/layout/PageTitle'
import SectionTitle from '../../components/layout/SectionTitle'

const merge = function (s1,s2){
    return s1 += s2
}

const UseRef = (props) => {

    const [value1,setValuer] = useState("")
    const [value2,setValuer2] = useState("")
    const count = useRef(0)
//o useRef sempre vai me retornar a mesma referência e eu consigo ter um estado
// a partir do current

    const myInput1 = useRef(null)
    const myInput2 = useRef(null)


    useEffect(function(){
        count.current = count.current + 1
        myInput2.current.focus()
    }, [value1])

    useEffect(function(){
        count.current++
        myInput1.current.focus()
    }, [value2])

    

       return (
        <div className="UseRef">
            <PageTitle
                title="Hook UseRef"
                subtitle="Retorna um objeto mutável com a propriedade .current!"
            />
            
            <SectionTitle title="Exercicio #01" />
            <div className="center">
                <div>
                    <span className="text">Valor:</span>
                    <span className="text">{merge(value1,value2)}[</span>
                    <span className="text red">{count.current}</span>
                    <span className="text">]</span>
                </div>
                <input type="text" className="input" 
                ref={myInput1}
                value={value1} onChange={e => setValuer(e.target.value)} />
            </div>

            <SectionTitle title="Exercicio #02" />
            <div className="center">


                <input type="text" className="input" 
                ref={myInput2}
                value={value2} onChange={e => setValuer2(e.target.value)} />

            </div>
        </div>
    )
}

export default UseRef
